VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "WndInputHardw"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Explicit

'https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-hardwareinput
Private Type HARDWINPUT
    dwType      As EInputType ' 4
    uMsg        As Long       ' 4
    WParamL     As Integer    ' 2
    WParamH     As Integer    ' 2
End Type                ' Sum: 12




Private Type PHARDWINPUT
    SAPtr As TUDTPtr
    Arr() As HARDWINPUT
End Type

Private m_Value As PHARDWINPUT
Private m_Data  As HARDWINPUT

Private Sub Class_Initialize()
    m_Data.dwType = EInputType.INPUT_HARDWARE
    MPtr.New_UDTPtr m_Value.SAPtr, FADF_AUTO Or FADF_FIXEDSIZE Or FADF_RECORD, 8
    MPtr.SAPtr(ArrPtr(m_Value.Arr)) = m_Value.SAPtr.pSA
    m_Value.SAPtr.pvData = VarPtr(m_Data)
End Sub

Private Sub Class_Terminate()
    MPtr.ZeroSAPtr ArrPtr(m_Value.Arr)
End Sub
Friend Sub New_(aMessage As Long, WParamL As Integer, WParamH As Integer)
    'If pData Then m_Value.SAPtr.pvData = pData
    With Me: .Message = aMessage: .WParamL = WParamL: .WParamH = WParamH: End With
End Sub
'Copy to MNew:
'Public Function WndInputKeybd(ByVal pData As LongPtr, ByVal aMessage As Long, ByVal WParamL As Integer, ByVal WParamH As Integer) As WndInputKeybd
'    Set WndInputKeybd = New WndInputKeybd: WndInputKeybd.New_ pData, aMessage, ByVal WParamL, ByVal WParamH
'End Function

Friend Sub NewC(other As WndInputKeybd)
    With other: New_ .Message, .WParamL, .WParamH: End With
End Sub
Public Function Clone() As WndInputKeybd
    Set Clone = New WndInputKeybd: Clone.NewC Me
End Function

Public Property Get Key() As String
    Key = "Hi: " & CStr(Me.Message) '& ", wParamL" & Me.WParamL
End Property

Public Property Get Ptr() As LongPtr
    Ptr = m_Value.SAPtr.pvData
End Property
Public Property Let Ptr(ByVal Value As LongPtr)
    m_Value.SAPtr.pvData = Value
End Property

Public Sub SetData()
    m_Value.Arr(0) = m_Data
End Sub

'The message generated by the input hardware.
Public Property Get Message() As Long
    Message = m_Value.Arr(0).uMsg
End Property
Public Property Let Message(ByVal Value As Long)
    m_Value.Arr(0).uMsg = Value
End Property

'The low-order word of the lParam parameter for uMsg.
Public Property Get WParamL() As Integer
    WParamL = m_Value.Arr(0).WParamL
End Property
Public Property Let WParamL(ByVal Value As Integer)
    m_Value.Arr(0).WParamL = Value
End Property

'The high-order word of the lParam parameter for uMsg.
Public Property Get WParamH() As Integer
    WParamH = m_Value.Arr(0).WParamH
End Property
Public Property Let WParamH(ByVal Value As Integer)
    m_Value.Arr(0).WParamH = Value
End Property

Public Function ToStr() As String
    Dim s As String
    s = TypeName(Me) & "{" & vbCrLf
    With Me
        s = s & "    Message = " & .Message
        s = s & "    WParamL = " & .WParamL
        s = s & "    WParamH = " & .WParamH
    End With
    ToStr = s & "}"
End Function

